version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: ${DEPLOYMENT_MODE:-development}
    image: ${CONTAINER_REGISTRY}/platform-app:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
    volumes:
      - .:/workspace:cached
      - /workspace/node_modules
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - postgres
      - mongodb
      - redis
      - rabbitmq
    networks:
      - platform-network

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - platform-network

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - platform-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - platform-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - platform-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - platform-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana:/etc/grafana
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - platform-network

networks:
  platform-network:
    driver: bridge

volumes:
  postgres-data:
  mongodb-data:
  redis-data:
  rabbitmq-data:
  prometheus-data:
  grafana-data:

# DevContainer Configuration
devcontainer:
  name: "Platform Development"
  dockerComposeFile: docker-compose.yml
  service: app
  workspaceFolder: /workspace
  extensions:
    - dbaeumer.vscode-eslint
    - esbenp.prettier-vscode
    - ms-azuretools.vscode-docker
    - ms-vscode.vscode-typescript-tslint-plugin
    - graphql.vscode-graphql
    - mongodb.mongodb-vscode
    - mtxr.sqltools
    - mtxr.sqltools-driver-pg
    - redis-console